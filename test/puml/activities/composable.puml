@startuml
!include ../../domainStory.puml

!procedure $connect($start, $label, $end)
    $createConnection($start, $end, -->, $label)
'    !if $label
'        $start --> $end : $label
'    !else $label
'        $start --> $end
'    !endif
!endprocedure

!procedure $startActivity($step, $start, $label, $end)
    $start --> $end : $label
!endprocedure

!procedure introduce($name, $element)
    !log $name, $element
    %set_variable_value($name, $element)
!endprocedure

!function cons($start, $label, $end)
    !log $start, $label, $end

    $connect($start, $label, $end)

    !return $start
!endfunction

!unquoted procedure continue($predicate, $object, $objectArr = "", $color = "", $scale = "", $note = "")
    !log $predicate, $object
    !$start = $lastObjectName

    ' ensure the object exists / create one dynamically
    !$object = $ensureElementExists($object, $tag, $note, $shape, $scale, $color, $background)

    !if $objectArr == ""
        !$objectArr = "-->"
    !endif

    ' create connecting arrows
    $createConnection($start, $object, $objectArr, $predicate)

    $createElementNote($object, $note)

    !$lastObjectName = $object
!endprocedure

!unquoted procedure otherContinue($predicate, $object, $objectArr = "", $color = "", $scale = "", $note = "")
    !log $predicate, $object
    !$start = $lastSplitObject

    ' ensure the object exists / create one dynamically
    !$object = $ensureElementExists($object, $tag, $note, $shape, $scale, $color, $background)

    !if $objectArr == ""
        !$objectArr = "-->"
    !endif

    ' create connecting arrows
    $createConnection($start, $object, $objectArr, $predicate)

    $createElementNote($object, $note)

    !$lastObjectName = $object
!endprocedure

!unquoted procedure split($predicate, $object, $objectArr = "", $color = "", $scale = "", $note = "")
    !log $predicate, $object
    !$start = $lastObjectName
    !global $lastSplitObject = $lastObjectName

    ' ensure the object exists / create one dynamically
    !$object = $ensureElementExists($object, $tag, $note, $shape, $scale, $color, $background)

    !if $objectArr == ""
        !$objectArr = "-->"
    !endif

    ' create connecting arrows
    $createConnection($start, $object, $objectArr, $predicate)

    $createElementNote($object, $note)

    !$lastObjectName = $object
!endprocedure

' =========================================

Person(A)

'Person(Person1, "Betty", $note=hallo)


'beginSomeContext()

!$activityContext = "open"

' introduce(p, Person(Pete))

'endSomeContext()

!xyz = Person(Sabrina)

actor Falk

!log p

activity(1, A, works on, Info(w))
continue(and, Person(zeus))
split(and, Info(blitz, $color=red), ->)
continue(and, Person(hermes), $color=green)
continue(and, poseidon)

otherContinue(and, frank)
continue(and, susi)

split(and, dfasfd)
otherContinue(and, zappa)
continue(and, siomon)


'activity(., dd, works on, Document(w1))
'
'activity(1, p, works on, Document(w1))
'activity(1, Pete, works on, Document(w2))
'activity(1, Sabrina, works on, Document(w3))
'activity(1, xyz, works on, Document(w4))

'activity(2, B, works on, cons(Info(foo), ffo, cons(Document(v), "x", Document(u)))

'startActivity(2, B, works on, cons(Info(foo), ffo, cons(Document(v), "x", Document(u))))

'withActivity(4, Pete, enjoys, withInfo(fun, and, Document(x)))

'activity(3, Person(C), works on, Document(v, with(using, Document(u)))


@enduml
