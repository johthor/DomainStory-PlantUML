@startuml
'!include <DomainStory/domainStory>
!include ../domainStory.puml
'!include https://raw.githubusercontent.com/johthor/DomainStory-PlantUML/main/domainStory.puml

!include <material/bus>

!unquoted function Bus($label, $tag = "", $note = "", $shape = $Object_Shape, $scale = $Object_IconScale, $color = $Object_IconColor, $background = "")
    !return Object("Bus", "$ma_bus", $label, $tag, $note, $shape, $scale, $color, $background)
!endfunction

introduce(agent, Person(gate agent))
introduce(dispatcher, Person(bus dispatcher))
introduce(dispatching, System(bus dispatching))
introduce(driver, Person(bus driver))
introduce(Group(passengers))

Boundary(contracting) {
    activity(_, agent, orders, Call(bus), from, dispatcher)
    activity(_, dispatcher, creates, Document(job to order), in, dispatching, <--, -->)
    activity(_, dispatcher, gives, Call(order), to, driver)
}

Boundary(transport) {
    activity(_, driver, transports by, Bus(bus), passengers, _, <--)
}

Boundary(logging) {
    activity(_, driver, logs, Document(details of the journey))
    note right of $lastObjectCreated
        Disruptions,
        number of
        passengers
        transported, etc.
    end note
    activity(_, driver, hands over, Document(details of the journey), at the end of the shift to, dispatcher)
    activity(_, dispatcher, enters, Document(details of the journey), in, dispatching, -->, <--)
}

contracting -[hidden]> transport
@enduml
