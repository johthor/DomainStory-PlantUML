@startuml
'!include <DomainStory/domainStory>
!include ../domainStory.puml
'!include https://raw.githubusercontent.com/johthor/DomainStory-PlantUML/main/domainStory.puml

!include <material/bus>

!unquoted function Bus($label, $tag = "", $note = "", $shape = $Object_Shape, $scale = $Object_IconScale, $color = $Object_IconColor, $background = "")
    !return Object("Bus", "$ma_bus", $label, $tag, $note, $shape, $scale, $color, $background)
!endfunction

introduce(agent, Person(gate agent))
introduce(dispatcher, Person(bus dispatcher))
introduce(dispatching, System(bus dispatching))
introduce(driver, Person(bus driver))
introduce(Group(passengers))

Boundary(contracting) {
    introduce(busCall, Call(bus))
    introduce(jobOrder, Document(job to order))
    introduce(Call(order))
}

Boundary(transport) {
    introduce(Bus(bus))
}

Boundary(logging) {
    introduce(details1, Document(details of the journey))
    introduce(details2, Document(details of the journey))
    introduce(details3, Document(details of the journey))
    note right of details1
        Disruptions,
        number of
        passengers
        transported, etc.
    end note
}

activity(_, agent, orders, busCall, from, dispatcher)
activity(_, dispatcher, creates, jobOrder, in, dispatching, <--, -->)
activity(_, dispatcher, gives, order, to, driver)
activity(_, driver, transports by, bus, passengers, _, <--)
activity(_, driver, logs, details1)
activity(_, driver, hands over, details2, at the end of the shift to, dispatcher)
activity(_, dispatcher, enters, details3, in, dispatching, -->, <--)

contracting -[hidden]> transport
@enduml
