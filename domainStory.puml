' Default Styling
' ##################################

!global $storyLayout ?= "left-to-right"

!global $actorStyle ?= "default"
!global $actorScale ?= 1
!global $actorShape ?= "agent"

!global $objectStyle ?= "default"
!global $objectScale ?= 0.8
!global $objectShape ?= "card"

!global $boundaryShape ?= "rectangle"

hide stereotypes
skinparam DefaultTextAlignment center

!ifdef $THEME
    !global $textColor ?= ""
    !global $actorColor ?= ""
    !global $objectColor ?= ""
    !global $boundaryColor ?= ""
    !global $activityColor ?= ""

    !global $stepColor ?= ""
    !global $stepFontColor ?= $textColor
    !global $stepFontSize ?= ""

    !global $noteColor ?= ""
    !global $noteBorder ?= ""
!else
    !global $textColor ?= "#0b0c10"
    !global $actorColor ?= "#1f2833"
    !global $objectColor ?= "#1f2833"
    !global $boundaryColor ?= "#1f2833"
    !global $activityColor ?= "#c5c6c7"

    !global $stepColor ?= "#66fcf1"
    !global $stepFontColor ?= $textColor
    !global $stepFontSize ?= 16

    !global $noteColor ?= "#c5c6c7"
    !global $noteBorder ?= "#1f2833"

    skinparam Shadowing false
    skinparam Padding 5

    ' define default style for actor elements
    skinparam $actorShape {
        BackgroundColor none
        BorderColor none
    }

    ' define default style for work object elements
    skinparam $objectShape {
        BackgroundColor none
        BorderColor none
    }

    ' define default style for boundary containers
    skinparam $boundaryShape {
        BackgroundColor none
        BorderStyle dashed
        RoundCorner 15
    }
!endif

!if $textColor
    skinparam $actorShape##FontColor $textColor
    skinparam $objectShape##FontColor $textColor
    skinparam $boundaryShape##FontColor $textColor
    skinparam arrowFontColor $textColor
    skinparam noteFontColor $textColor
!endif

!if $boundaryColor
    skinparam $boundaryShape##BorderColor $boundaryColor
!endif

!if $activityColor
    skinparam arrowColor $activityColor
!endif

!if $noteColor
    skinparam noteBackgroundColor $noteColor
!endif

!if $noteBorder
    skinparam noteBorderColor $noteBorder
!endif

' Layout
' ##################################

' in journeys with multiple stories the default top-to-bottom direction
' usually gives better results

!if $storyLayout == "left-to-right" || $storyLayout == "landscape"
    !global $storyLayout = "left-to-right"
    left to right direction
!else
    top to bottom direction
!endif

' Mutable state
' ##################################

!global $stepCounter = 0
!global $objectCounter = 0

' Actors
' ##################################

!unquoted procedure Actor($kind, $sprite, $name, $label = $name, $color = $actorColor, $scale = $actorScale, $shape = $actorShape, $note = "")
    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color == ""
        $shape "<$sprite{scale=$scale}>\r $label" as $name <<$kind>>
    !else
        $shape "<color:$color><$sprite{scale=$scale}></color>\r $label" as $name <<$kind>>
    !endif

    $addNote($name, $note)
!endprocedure

!if %not(%variable_exists("$personSprite"))
    !if $actorStyle == "default"
        !include <material/account_outline>
        !global $personSprite = "$ma_account_outline"
    !else
        !include <material/account>
        !global $personSprite = "$ma_account"
    !endif
!endif

!unquoted procedure Person($name, $label = "", $color = $actorColor, $scale = $actorScale, $shape = $actorShape, $note = "")
    Actor("Person", "$personSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!if %not(%variable_exists("$groupSprite"))
    !if $actorStyle == "default"
        !include <material/account_multiple_outline>
        !global $groupSprite = "$ma_account_multiple_outline"
    !else
        !include <material/account_multiple>
        !global $groupSprite = "$ma_account_multiple"
    !endif
!endif

!unquoted procedure Group($name, $label = "", $color = $actorColor, $scale = $actorScale, $shape = $actorShape, $note = "")
    Actor("Group", "$groupSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!include <material/laptop>
!unquoted procedure System($name, $label = "", $color = $actorColor, $scale = $actorScale, $shape = $actorShape, $note = "")
    Actor("System", "$ma_laptop", $name, $label, $color, $scale, $shape, $note)
!endprocedure

' Work objects
' ##################################

!unquoted procedure Object($kind, $sprite, $name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color == ""
        $shape "<$sprite{scale=$scale}>\r $label" as $name <<$kind>>
    !else
        $shape "<color:$color><$sprite{scale=$scale}></color>\r $label" as $name <<$kind>>
    !endif

    $addNote($name, $note)
!endprocedure

!if %not(%variable_exists("$documentSprite"))
    !if $objectStyle == "default"
        !include <material/file_document>
        !global $documentSprite = "$ma_file_document"
    !else
        !include <material/document>
        !global $documentSprite = "$ma_document"
    !endif
!endif

!unquoted procedure Document($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Document", "$documentSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!if %not(%variable_exists("$folderSprite"))
    !if $objectStyle == "default"
        !include <material/folder_outline>
        !global $folderSprite = "$ma_folder_outline"
    !else
        !include <material/folder>
        !global $folderSprite = "$ma_folder"
    !endif
!endif

!unquoted procedure Folder($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Folder", "$folderSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!include <material/phone>
!unquoted procedure Call($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Call", "$ma_phone", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!if %not(%variable_exists("$emailSprite"))
    !if $objectStyle == "default"
        !include <material/at>
        !global $emailSprite = "$ma_at"
    !else
        !include <material/email>
        !global $emailSprite = "$ma_email"
    !endif
!endif

!unquoted procedure Email($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Email", "$emailSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!if %not(%variable_exists("$conversationSprite"))
    !if $objectStyle == "default"
        !include <material/message_outline>
        !global $conversationSprite = "$ma_message_outline"
    !else
        !include <material/message>
        !global $conversationSprite = "$ma_message"
    !endif
!endif

!unquoted procedure Conversation($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Conversation", "$conversationSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

!if %not(%variable_exists("$infoSprite"))
    !if $objectStyle == "default"
        !include <material/information_outline>
        !global $infoSprite = "$ma_information_outline"
    !else
        !include <material/information>
        !global $infoSprite = "$ma_information"
    !endif
!endif

!unquoted procedure Info($name, $label = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "")
    Object("Info", "$infoSprite", $name, $label, $color, $scale, $shape, $note)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Boundary($name, $label = "", $backgroundColor = "", $shape = $boundaryShape, $note = "")
    !if $label == ""
        !$label = $name
    !endif

    !if $note
        $shape $name
        $addBoundaryNote($name, $note)
    !endif

    ' output below
    !if $backgroundColor
        !$hexColor = %substr($backgroundColor, 0, 1)
        !if $hexColor == "#"
            $shape "==$label" as $name $backgroundColor
        !else
            $shape "==$label" as $name #$backgroundColor
        !endif
    !else
        $shape "==$label" as $name
    !endif
!endprocedure

' Activities
' ##################################

!unquoted procedure activity($step, $subject, $predicate, $object, $post = "", $target = "", $objectArr = "", $targetArr = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $note = "", $targetColor = $objectColor, $targetScale = $objectScale, $targetShape = $objectShape, $targetNote = "")
    ' Decide on the activity direction
    !if $objectArr == ""
        !$objectArr = $computeArrowDirection($step)

        !if $objectArr
            ' Delete position indicator from $step
            !$step = %substr($step, 1)
        !else
            ' No position indicator was found => follow default story flow
            !$objectArr = "-->"
        !endif
    !endif

    !if $targetArr == ""
        !$targetArr = $objectArr
    !endif

    ' Handle first connection between subject and object
    !$object = $ensureElementExists($object, $color, $scale, $shape)

    $createConnection($subject, $object, $objectArr) : $stepLabel($step) $predicate

    $addNote($object, $note)

    ' Handle possible second connection between object and target
    !$target = $ensureElementExists($target, $targetColor, $targetScale, $targetShape)

    !if $post && $post != "_"
        !if $target && $target != "_"
            $createConnection($object, $target, $targetArr) : $post
        !else
            $createConnection($object, $post, $targetArr)
        !endif
    !endif

    $addNote($target, $targetNote)
!endprocedure

' Helper
' ##################################

!procedure $addNote($reference, $note)
    !if $note != ""
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)
        !if $notePosition == "^"
            note top of $reference : $noteText
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            note bottom of $reference : $noteText
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "!"
            !if $storyLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $storyLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

!procedure $addBoundaryNote($reference, $note)
    !if $note != ""
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)
        !if $notePosition == "^"
            !if $storyLayout == "left-to-right"
                note bottom of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            !if $storyLayout == "left-to-right"
                note top of $reference : $noteText
            !else
                note bottom of $reference : $noteText
            !endif
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "!"
            !if $storyLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $storyLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

!function $computeArrowDirection($step)
    !$activityDirection = %substr($step, 0, 1)
    !if $activityDirection == "^"
        !if $storyLayout == "left-to-right"
            !return "<-"
        !else
            !return "<--"
        !endif
    !elseif $activityDirection == ">"
        !if $storyLayout == "left-to-right"
            !return "-->"
        !else
            !return "->"
        !endif
    !elseif $activityDirection == "<"
        !if $storyLayout == "left-to-right"
            !return "<--"
        !else
            !return "<-"
        !endif
    !elseif  $activityDirection == "v"
        !if $storyLayout == "left-to-right"
            !return "->"
        !else
            !return "-->"
        !endif
    !elseif  $activityDirection == "!"
        !return "<--"
    !else
        ' Signal no change
        !return %false()
    !endif
!endfunction

!function $ensureElementExists($object, $color = $objectColor, $scale = $objectScale, $shape = $objectShape)
    !$objectName = $object
    !$objectSeparator = %strpos($object, ":")
    !if $objectSeparator > -1
        !$objectCounter = $objectCounter + 1
        !$objectKind = %substr($object, 0, $objectSeparator)
        !$objectLabel = %substr($object, $objectSeparator + 1)
        !$objectName = $objectKind + $objectCounter
        '! Actor($kind, $sprite, $name, $label, $color, $scale, $shape, $note)
        %invoke_procedure($objectKind, $objectName, $objectLabel, $color, $scale, $shape)
    !endif
    !return $objectName
!endfunction

!function $createConnection($from, $to, $spec)
    !if %substr($spec, 0, 1) == "<"
        !return $to + " " + $spec + " " + $from
    !else
        !return $from + " " + $spec + " " + $to
    !endif
!endfunction

!function $computeStepNumber($step)
    !if $step == "_"
        !$stepCounter = $stepCounter + 1
        !return $stepCounter
    !elseif $step == "|"
        !return $stepCounter
    !elseif $step == "."
        !return ""
    !elseif %substr($step, 0, 1) == "="
        !$stepCounter = %intval(%substr($step, 1))
        !return $stepCounter
    !else
        !return $step
    !endif
!endfunction

!function $stepLabel($step)
    !$result = ""
    !$stepNum = $computeStepNumber($step)

    !if $stepNum
        !$result = "(" + $stepNum + ")"
        !if $stepColor
            !$result = "<back:" + $stepColor + ">" + $result + "</back>"
        !endif
        !if $stepFontColor
            !$result = "<color:" + $stepFontColor + ">" + $result + "</color>"
        !endif
        !if $stepFontSize
            !$result = "<size:" + $stepFontSize + ">" + $result + "</size>"
        !endif
    !endif

    !return $result
!endfunction
