' Debugging Utilities
' ##################################

!procedure $debug($message)
    !if $LOG_LEVEL == "debug"
        !log [DEBUG] $message
    !endif
!endprocedure

' Story Layout
' ##################################

!global $StoryLayout ?= "left-to-right"

!if $StoryLayout == "left-to-right" || $StoryLayout == "landscape"
    !global $StoryLayout = "left-to-right"
    left to right direction
!else
    top to bottom direction
!endif

' Style Utilities
' ##################################

!function $setStyleProperty($property, $context, $value, $tag = "", $themeable = %true())
    !$variableName = "$" + $context + $tag + $property
    !if %variable_exists($variableName)
        !return %get_variable_value($variableName)
    !else
        !if $themeable
            !ifdef $THEME
                !$value = ""
            !endif
        !endif

        !if $value
            $debug("declaring " + $variableName + " with value [" + $value + "]")
            %set_variable_value($variableName, $value)
            !return $value
        !else
            $debug("declaring " + $variableName + " with empty value")
            %set_variable_value($variableName, "")
            !return ""
        !endif
    !endif
!endfunction

!procedure $activateStyleProperty($property, $context, $value = "", $kind = "", $tag = "")
    !if $kind
        !if $tag
            !$stereotype = "<<" + $kind + $tag + ">>"
        !else
            !$stereotype = "<<" + $kind + ">>"
        !endif
    !else
        !$stereotype = ""
    !endif

    !$shape = %get_variable_value("$" + $context + "Shape")

    !if $value
        !if $shape
            skinparam $shape##$property##$stereotype $value
        !else
            skinparam $context##$property##$stereotype $value
        !endif
    !endif
!endprocedure

!procedure $declareStyleProperty($property, $context, $value = "", $kind = "", $tag = "", $skinParam = %true(), $themeable = %true())
    !if $kind
        !$propertyValue = $setStyleProperty($property, $kind, $value, $tag, $themeable)
    !else
        !$propertyValue = $setStyleProperty($property, $context, $value, $tag, $themeable)
    !endif
    !if $skinParam
        $activateStyleProperty($property, $context, $propertyValue, $kind, $tag)
    !endif
!endprocedure

!procedure $extendStyleProperty($property, $context, $kind, $skinParam = %true(), $themeable = %true())
    !$contextValue = %get_variable_value("$" + $context + $property)
    $declareStyleProperty($property, $context, $contextValue, $kind, "", $skinParam, $themeable)
!endprocedure

!procedure $extendStyleDeclarations($context, $kind, $icon)
    $extendStyleProperty(Shape, $context, $kind, $skinParam = %false(), $themeable = %false())
    $extendStyleProperty(IconScale, $context, $kind, $skinParam = %false(), $themeable = %false())
    $extendStyleProperty(IconColor, $context, $kind, $skinParam = %false())

    !if %not(%variable_exists("$" + $kind + "IconName"))
        !include <material/$icon>
        %set_variable_value("$" + $kind + "IconName", "$ma_" + $icon)
    !endif

    $extendStyleProperty(FontColor, $context, $kind)
    $extendStyleProperty(FontName, $context, $kind)
    $extendStyleProperty(FontSize, $context, $kind)
    $extendStyleProperty(FontStyle, $context, $kind)
    $extendStyleProperty(TextAlignment, $context, $kind)

    $extendStyleProperty(BackgroundColor, $context, $kind)
    $extendStyleProperty(BorderStyle, $context, $kind)
    $extendStyleProperty(BorderColor, $context, $kind)
    $extendStyleProperty(BorderThickness, $context, $kind)
    $extendStyleProperty(RoundCorner, $context, $kind)
    $extendStyleProperty(Shadowing, $context, $kind)
!endprocedure

' Global Style declarations
' ##################################

$declareStyleProperty(FontColor, Default, "#0b0c10")
$declareStyleProperty(FontName, Default)
$declareStyleProperty(FontSize, Default)
$declareStyleProperty(FontStyle, Default)
$declareStyleProperty(TextAlignment, Default, center)

$declareStyleProperty(BackgroundColor, Default, "none")
$declareStyleProperty(BorderStyle, Default, "none")
$declareStyleProperty(BorderColor, Default, "none")
$declareStyleProperty(BorderThickness, Default, 1)
$declareStyleProperty(RoundCorner, Default, 0)
$declareStyleProperty(Shadowing, Default, false, $skinParam = %false())

hide stereotypes
!ifndef $THEME
    skinparam Shadowing $DefaultShadowing
!endif

' Actor Styles
' ==================================

$declareStyleProperty(Shape, Actor, Agent, $skinParam = %false(), $themeable = %false())

$declareStyleProperty(IconStyle, Actor, "default", $skinParam = %false(), $themeable = %false())
$declareStyleProperty(IconScale, Actor, 1, $skinParam = %false(), $themeable = %false())
$declareStyleProperty(IconColor, Actor, "#1f2833", $skinParam = %false())

$declareStyleProperty(FontColor, Actor, $DefaultFontColor)
$declareStyleProperty(FontName, Actor, $DefaultFontName)
$declareStyleProperty(FontSize, Actor, $DefaultFontSize)
$declareStyleProperty(FontStyle, Actor, $DefaultFontStyle)
$declareStyleProperty(TextAlignment, Actor, $DefaultTextAlignment)

$declareStyleProperty(BackgroundColor, Actor, $DefaultBackgroundColor)
$declareStyleProperty(BorderStyle, Actor, $DefaultBorderStyle)
$declareStyleProperty(BorderColor, Actor, $DefaultBorderColor)
$declareStyleProperty(BorderThickness, Actor, $DefaultBorderThickness)
$declareStyleProperty(RoundCorner, Actor, $DefaultRoundCorner)
$declareStyleProperty(Shadowing, Actor, $DefaultShadowing)

' Work Object Styles
' ==================================

$declareStyleProperty(Shape, Object, Card, $skinParam = %false(), $themeable = %false())

$declareStyleProperty(IconStyle, Object, "default", $skinParam = %false(), $themeable = %false())
$declareStyleProperty(IconScale, Object, 0.8, $skinParam = %false(), $themeable = %false())
$declareStyleProperty(IconColor, Object, "#1f2833", $skinParam = %false())

$declareStyleProperty(FontColor, Object, $DefaultFontColor)
$declareStyleProperty(FontName, Object, $DefaultFontName)
$declareStyleProperty(FontSize, Object, $DefaultFontSize)
$declareStyleProperty(FontStyle, Object, $DefaultFontStyle)
$declareStyleProperty(TextAlignment, Object, $DefaultTextAlignment)

$declareStyleProperty(BackgroundColor, Object, $DefaultBackgroundColor)
$declareStyleProperty(BorderStyle, Object, $DefaultBorderStyle)
$declareStyleProperty(BorderColor, Object, $DefaultBorderColor)
$declareStyleProperty(BorderThickness, Object, $DefaultBorderThickness)
$declareStyleProperty(RoundCorner, Object, $DefaultRoundCorner)
$declareStyleProperty(Shadowing, Object, $DefaultShadowing)

' Boundary Styles
' ==================================

$declareStyleProperty(Shape, Boundary, Rectangle, $skinParam = %false(), $themeable = %false())

$declareStyleProperty(FontColor, Boundary, $DefaultFontColor)
$declareStyleProperty(FontName, Boundary, $DefaultFontName)
$declareStyleProperty(FontSize, Boundary, $DefaultFontSize)
$declareStyleProperty(FontStyle, Boundary, $DefaultFontStyle)
$declareStyleProperty(TextAlignment, Boundary, $DefaultTextAlignment)

$declareStyleProperty(BackgroundColor, Boundary, $DefaultBackgroundColor)
$declareStyleProperty(BorderStyle, Boundary, "dashed")
$declareStyleProperty(BorderColor, Boundary, "#1f2833")
$declareStyleProperty(BorderThickness, Boundary, 2)
$declareStyleProperty(RoundCorner, Boundary, 15)
$declareStyleProperty(Shadowing, Boundary, $DefaultShadowing)

' Note Styles
' ==================================

$declareStyleProperty(FontColor, Note, $DefaultFontColor)
$declareStyleProperty(FontName, Note, $DefaultFontName)
$declareStyleProperty(FontSize, Note, $DefaultFontSize)
$declareStyleProperty(FontStyle, Note, $DefaultFontStyle)
$declareStyleProperty(TextAlignment, Note, left)

$declareStyleProperty(BackgroundColor, Note, "#c5c6c7")
$declareStyleProperty(BorderStyle, Note, $DefaultBorderStyle)
$declareStyleProperty(BorderColor, Note, "#1f2833")
$declareStyleProperty(BorderThickness, Note, $DefaultBorderThickness)
$declareStyleProperty(RoundCorner, Note, $DefaultRoundCorner)
$declareStyleProperty(Shadowing, Note, $DefaultShadowing)

' Activity Styles
' ==================================

$declareStyleProperty(Shape, Activity, Arrow, $skinParam = %false(), $themeable = %false())

$declareStyleProperty(FontColor, Activity, $DefaultFontColor)
$declareStyleProperty(FontName, Activity, $DefaultFontName)
$declareStyleProperty(FontSize, Activity, $DefaultFontSize)
$declareStyleProperty(FontStyle, Activity, $DefaultFontStyle)
$declareStyleProperty(MessageAlignment, Activity, left)

$declareStyleProperty(Color, Activity, "#c5c6c7")

' Step Label Styles
' ----------------------------------

$declareStyleProperty(FontColor, Step, $DefaultFontColor, $skinParam = %false())
$declareStyleProperty(FontSize, Step, 16, $skinParam = %false())

$declareStyleProperty(BackgroundColor, Step, "#66fcf1", $skinParam = %false())

' Mutable state
' ##################################

!global $stepCounter = 0
!global $workObjectCounter = 0

' Actors
' ##################################

!unquoted procedure Actor($kind, $iconName, $name, $label = "", $note = "", $shape = $ActorShape, $scale = $ActorIconScale, $color = $ActorIconColor, $background = "")
    $debug($kind + " : " + $iconName + " : " + $name + " : " + $label + " : " + $note + " : " + $shape + " : " + $scale + " : " + $color + " : " + $background)

    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color
        $shape "<$iconName{scale=$scale,color=$color}>\r $label" as $name <<$kind>>
    !else
        $shape "<$iconName{scale=$scale}>\r $label" as $name <<$kind>>
    !endif

    $createElementNote($name, $note)
!endprocedure

' Person Actor
' ==================================

!global $PersonIconStyle ?= "default"

!if $PersonIconStyle == "default"
    $extendStyleDeclarations("Actor", "Person", "account_outline")
!else
    $extendStyleDeclarations("Actor", "Person", "account")
!endif

!unquoted procedure Person($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $PersonShape
    !endif
    !if $scale == ""
        !$scale = $PersonIconScale
    !endif
    !if $color == ""
        !$color = $PersonIconColor
    !endif

    Actor("Person", $PersonIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Group Actor
' ==================================

!global $GroupIconStyle ?= "default"

!if $GroupIconStyle == "default"
    $extendStyleDeclarations("Actor", "Group", "account_multiple_outline")
!else
    $extendStyleDeclarations("Actor", "Group", "account_multiple")
!endif

!unquoted procedure Group($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $PersonShape
    !endif
    !if $scale == ""
        !$scale = $PersonIconScale
    !endif
    !if $color == ""
        !$color = $PersonIconColor
    !endif

    Actor("Group", $GroupIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' System Actor
' ==================================

$extendStyleDeclarations("Actor", "System", "laptop")

!unquoted procedure System($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $PersonShape
    !endif
    !if $scale == ""
        !$scale = $PersonIconScale
    !endif
    !if $color == ""
        !$color = $PersonIconColor
    !endif

    Actor("System", $SystemIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Work Objects
' ##################################

!unquoted procedure Object($kind, $iconName, $name, $label = "", $note = "", $shape = $ObjectShape, $scale = $ObjectScale, $color = $ObjectColor, $background = "")
    $debug($kind + " : " + $iconName + " : " + $name + " : " + $label + " : " + $note + " : " + $shape + " : " + $scale + " : " + $color + " : " + $background)

    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color
        $shape "<$iconName{scale=$scale,color=$color}>\r $label" as $name <<$kind>>
    !else
        $shape "<$iconName{scale=$scale}>\r $label" as $name <<$kind>>
    !endif

    $createElementNote($name, $note)
!endprocedure

' Document Work Object
' ==================================

!global $DocumentIconStyle ?= "default"

!if $DocumentIconStyle == "default"
    $extendStyleDeclarations("Object", "Document", "file_document")
!else
    $extendStyleDeclarations("Object", "Document", "document")
!endif

!unquoted procedure Document($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $DocumentShape
    !endif
    !if $scale == ""
        !$scale = $DocumentIconScale
    !endif
    !if $color == ""
        !$color = $FolderIconColor
    !endif

    Object("Document", $DocumentIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Folder Work Object
' ==================================

!global $FolderIconStyle ?= "default"

!if $FolderIconStyle == "default"
    $extendStyleDeclarations("Object", "Folder", "folder_outline")
!else
    $extendStyleDeclarations("Object", "Folder", "folder")
!endif

!unquoted procedure Folder($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $FolderShape
    !endif
    !if $scale == ""
        !$scale = $FolderIconScale
    !endif
    !if $color == ""
        !$color = $FolderIconColor
    !endif

    Object("Folder", $FolderIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Call Work Object
' ==================================

$extendStyleDeclarations("Object", "Call", "phone")

!unquoted procedure Call($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $CallShape
    !endif
    !if $scale == ""
        !$scale = $CallIconScale
    !endif
    !if $color == ""
        !$color = $CallIconColor
    !endif

    Object("Call", $CallIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Email Work Object
' ==================================

!global $EmailIconStyle ?= "default"

!if $EmailIconStyle == "default"
    $extendStyleDeclarations("Object", "Email", "at")
!else
    $extendStyleDeclarations("Object", "Email", "email")
!endif

!unquoted procedure Email($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $EmailShape
    !endif
    !if $scale == ""
        !$scale = $EmailIconScale
    !endif
    !if $color == ""
        !$color = $EmailIconColor
    !endif

    Object("Email", $EmailIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Conversation Work Object
' ==================================

!global $ConversationIconStyle ?= "default"

!if $ConversationIconStyle == "default"
    $extendStyleDeclarations("Object", "Conversation", "message_outline")
!else
    $extendStyleDeclarations("Object", "Conversation", "message")
!endif

!unquoted procedure Conversation($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $ConversationShape
    !endif
    !if $scale == ""
        !$scale = $ConversationIconScale
    !endif
    !if $color == ""
        !$color = $ConversationIconColor
    !endif

    Object("Conversation", $ConversationIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Info Work Object
' ==================================

!global $InfoIconStyle ?= "default"

!if $InfoIconStyle == "default"
    $extendStyleDeclarations("Object", "Info", "information_outline")
!else
    $extendStyleDeclarations("Object", "Info", "information")
!endif

!unquoted procedure Info($name, $label = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    !if $shape == ""
        !$shape = $InfoShape
    !endif
    !if $scale == ""
        !$scale = $InfoIconScale
    !endif
    !if $color == ""
        !$color = $InfoIconColor
    !endif

    Object("Info", $InfoIconName, $name, $label, $note, $shape, $scale, $color, $background)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Boundary($name, $label = "", $note = "", $shape = $BoundaryShape, $background = "")
    !if $label == ""
        !$label = $name
    !endif

    !if $note
        $shape $name
        $createBoundaryNote($name, $note)
    !endif

    ' output below
    !if $background
        !$hexColor = %substr($background, 0, 1)
        !if $hexColor == "#"
            $shape "==$label" as $name $background
        !else
            $shape "==$label" as $name #$background
        !endif
    !else
        $shape "==$label" as $name
    !endif
!endprocedure

' Activities
' ##################################

!unquoted procedure activity($step, $subject, $predicate, $object, $post = "", $target = "", $objectArr = "", $targetArr = "", $note = "", $targetNote = "", $shape = "", $scale = "", $color = "", $background = "", $targetShape = "", $targetScale = "", $targetColor = "", $targetBackground = "")
    ' Decide on the activity direction
    !if $objectArr == ""
        !$objectArr = $computeArrowDirection($step)

        !if $objectArr
            ' Delete position indicator from $step
            !$step = %substr($step, 1)
        !else
            ' No position indicator was found => follow Default story flow
            !$objectArr = "-->"
        !endif
    !endif

    !if $targetArr == ""
        !$targetArr = $objectArr
    !endif

    ' Handle first connection between subject and object
    !$object = $ensureElementExists($object, $note, $shape, $scale, $color, $background)

    $createConnection($subject, $object, $objectArr, $predicate, $computeStepLabel($step))

    ' Handle possible second connection between object and target
    !$target = $ensureElementExists($target, $targetNote, $targetShape, $targetScale, $targetColor, $targetBackground)

    !if $post && $post != "_"
        !if $target && $target != "_"
            $createConnection($object, $target, $targetArr, $post)
        !else
            $createConnection($object, $post, $targetArr)
        !endif
    !endif
!endprocedure

' Notes
' ##################################

!procedure $createElementNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            note top of $reference : $noteText
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            note bottom of $reference : $noteText
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "~"
            !if $StoryLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $StoryLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

!procedure $createBoundaryNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            !if $StoryLayout == "left-to-right"
                note bottom of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            !if $StoryLayout == "left-to-right"
                note top of $reference : $noteText
            !else
                note bottom of $reference : $noteText
            !endif
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "~"
            !if $StoryLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $StoryLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

' Helper procedures
' ##################################

' Be aware this function might produce side effects
!function $ensureElementExists($element, $note, $shape, $scale, $color, $background)
    !$separatorPosition = %strpos($element, ":")

    !if $separatorPosition > -1
        !$workObjectCounter = $workObjectCounter + 1

        !$elementKind = %substr($element, 0, $separatorPosition)
        !$elementLabel = %substr($element, $separatorPosition + 1)
        !$elementName = $elementKind + $workObjectCounter

        'Element($kind, $name, $label, $note, $shape, $scale, $color, $background)
        %invoke_procedure($elementKind, $elementName, $elementLabel, $note, $shape, $scale, $color, $background)

        !return $elementName
    !else
        $createElementNote($element, $note)

        !return $element
    !endif
!endfunction

!procedure $createConnection($from, $to, $arrow = "-->", $label = "", $stepCounter = "")
    !if %substr($arrow, 0, 1) == "<"
        !if $label
            $to $arrow $from : $stepCounter $label
        !else
            $to $arrow $from
        !endif
    !else
        !if $label
            $from $arrow $to : $stepCounter $label
        !else
            $from $arrow $to
        !endif
    !endif
!endprocedure

' Helper functions
' ##################################

!function $computeArrowDirection($step)
    !$activityDirection = %substr($step, 0, 1)
    !if $activityDirection == "^"
        !if $StoryLayout == "left-to-right"
            !return "<-"
        !else
            !return "<--"
        !endif
    !elseif $activityDirection == ">"
        !if $StoryLayout == "left-to-right"
            !return "-->"
        !else
            !return "->"
        !endif
    !elseif $activityDirection == "<"
        !if $StoryLayout == "left-to-right"
            !return "<--"
        !else
            !return "<-"
        !endif
    !elseif  $activityDirection == "v"
        !if $StoryLayout == "left-to-right"
            !return "->"
        !else
            !return "-->"
        !endif
    !elseif  $activityDirection == "~"
        !return "<--"
    !else
        ' Signal no direction found
        !return %false()
    !endif
!endfunction

!function $computeStepLabel($step)
    !$stepNumber = $computeStepNumber($step)

    !if $stepNumber
        !$result = "(" + $stepNumber + ")"
        !if $StepFontColor
            !$result = "<color:" + $StepFontColor + ">" + $result + "</color>"
        !endif
        !if $StepFontSize
            !$result = "<size:" + $StepFontSize + ">" + $result + "</size>"
        !endif
        !if $StepBackgroundColor
            !$result = "<back:" + $StepBackgroundColor + ">" + $result + "</back>"
        !endif
        !return $result
    !else
        !return ""
    !endif
!endfunction

!function $computeStepNumber($step)
    !if $step == "_" || $step == "+"
        !$stepCounter = $stepCounter + 1
        !return $stepCounter
    !elseif $step == "|"
        !return $stepCounter
    !elseif %substr($step, 0, 1) == "="
        !$stepCounter = %intval(%substr($step, 1))
        !return $stepCounter
    !elseif $step == "."
        ' Signal unnumbered step
        !return %false()
    !else
        !return $step
    !endif
!endfunction
