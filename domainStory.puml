' DomainStory-PlantUML, version 0.3.1
' https://github.com/johthor/DomainStory-PlantUML

' Version
' ##################################
!function DomainStoryVersion()
    ' This is method is directly copied from C4-PlantUML and only slightly adjusted
    ' 2 spaces are used as a unique marker, that the release script makes the correct version update
    !global $DomainStoryVersion  =  "0.3.1"
    !return $DomainStoryVersion
!end function

' Debugging Utilities
' ##################################

!procedure $debug($message)
    !if LOG_LEVEL == "debug"
        !log [DEBUG] $message
    !endif
!endprocedure

' Story Layout
' ##################################

!global $StoryLayout ?= "left-to-right"

!if $StoryLayout == "left-to-right" || $StoryLayout == "landscape"
    !global $StoryLayout = "left-to-right"
    left to right direction
!else
    top to bottom direction
!endif

' Style Utilities
' ##################################

!function modeAdjustedColor($lightColor, $darkColor = "")
    !if PUML_MODE == "light"
        !$result = $lightColor
    !else
        !if $darkColor
            !$result = $darkColor
        !else
            !$result = %reverse_color($lightColor)
        !endif
    !endif
    $debug(PUML_MODE + " mode with input color " + $lightColor + " and output color " + $result)
    !return $result
!endfunction

!function $computeStereotype($kind, $tag, $combinations = %true())
    !if $kind
        !if $tag
            !if $combinations
                !return "<<" + $kind + ":" + $tag + ">><<" + $kind + ">><<" + $tag + ">>"
            !else
                !return "<<" + $kind + ":" + $tag + ">>"
            !endif
        !else
            !return "<<" + $kind + ">>"
        !endif
    !else
        !if $tag
            !return "<<" + $tag + ">>"
        !else
            !return ""
        !endif
    !endif
!endfunction

!function $setStyleProperty($property, $context, $value, $tag = "", $themeable = %false(), $force = %false())
    !$variableName = "$" + $context + $tag + $property
    !if %not($force) && %variable_exists($variableName)
        !return %get_variable_value($variableName)
    !else
        !if %not($force) && $themeable
            !ifdef $THEME
                !$value = ""
            !endif
        !endif

        !if $value
            $debug("declaring " + $variableName + " with value [" + $value + "]")
            %set_variable_value($variableName, $value)
            !return $value
        !else
            $debug("declaring " + $variableName + " with empty value")
            %set_variable_value($variableName, "")
            !return ""
        !endif
    !endif
!endfunction

!function $withFallback($value, $context, $kind, $tag, $property)
    !if $value
        !return $value
    !endif

    !$value = %get_variable_value("$" + $kind + $tag + $property)
    !if $value
        !return $value
    !endif

    !$value = %get_variable_value("$" + $context + $tag + $property)
    !if $value
        !return $value
    !endif

    !$value = %get_variable_value("$Default" + $tag + $property)
    !if $value
        !return $value
    !endif

    !$value = %get_variable_value("$" + $kind + $property)
    !if $value
        !return $value
    !endif

    !$value = %get_variable_value("$" + $context + $property)
    !if $value
        !return $value
    !endif

    !return %get_variable_value("$Default" + $property)
!endfunction

!procedure $activateStyleProperty($property, $context, $value = "", $kind = "", $tag = "")
    !$shape = %get_variable_value("$" + $context + "Shape")
    !$stereotype = $computeStereotype($kind, $tag, %false())

    !if $value
        !if $shape
            skinparam $shape##$property##$stereotype $value
        !else
            skinparam $context##$property##$stereotype $value
        !endif
    !endif
!endprocedure

!procedure $declareStyleProperty($property, $context, $value = "", $kind = "", $tag = "", $themeable = %false(), $skinParam = %true())
    !if $kind
        !$propertyValue = $setStyleProperty($property, $kind, $value, $tag, $themeable)
    !else
        !$propertyValue = $setStyleProperty($property, $context, $value, $tag, $themeable)
    !endif
    !if $skinParam
        $activateStyleProperty($property, $context, $propertyValue, $kind, $tag)
    !endif
!endprocedure

!procedure $extendStyleProperty($property, $context, $kind, $themeable = %false(), $skinParam = %true())
    !$contextValue = %get_variable_value("$" + $context + $property)
    $declareStyleProperty($property, $context, $contextValue, $kind, "", $themeable, $skinParam)
!endprocedure

!procedure $extendStyleDeclarations($context, $kind, $icon)
    $extendStyleProperty(Shape, $context, $kind, $themeable = %false(), $skinParam = %false())
    $extendStyleProperty(IconScale, $context, $kind, $themeable = %false(), $skinParam = %false())
    $extendStyleProperty(IconColor, $context, $kind, $themeable = %true(), $skinParam = %false())

    !if %not(%variable_exists("$" + $kind + "IconName"))
        !include <material/$icon>
        %set_variable_value("$" + $kind + "IconName", "$ma_" + $icon)
    !endif

    $extendStyleProperty(FontColor, $context, $kind, $themeable = %true())
    $extendStyleProperty(FontName, $context, $kind, $themeable = %true())
    $extendStyleProperty(FontSize, $context, $kind, $themeable = %true())
    $extendStyleProperty(FontStyle, $context, $kind, $themeable = %true())
    $extendStyleProperty(TextAlignment, $context, $kind, $themeable = %true())

    $extendStyleProperty(BackgroundColor, $context, $kind, $themeable = %true())
    $extendStyleProperty(BorderStyle, $context, $kind, $themeable = %true())
    $extendStyleProperty(BorderColor, $context, $kind, $themeable = %true())
    $extendStyleProperty(BorderThickness, $context, $kind, $themeable = %true())
    $extendStyleProperty(RoundCorner, $context, $kind, $themeable = %true())
    $extendStyleProperty(Shadowing, $context, $kind, $themeable = %true())
!endprocedure

' Global Style declarations
' ##################################

' Use `-darkmode -DPUML_MODE=dark` to set a preprocessing variable
!global PUML_MODE ?= "light"

$declareStyleProperty(FontColor, Default, modeAdjustedColor("#0B0C10"), $themeable = %true())
$declareStyleProperty(FontName, Default, $themeable = %true())
$declareStyleProperty(FontSize, Default, $themeable = %true())
$declareStyleProperty(FontStyle, Default, $themeable = %true())
$declareStyleProperty(TextAlignment, Default, center, $themeable = %true())

$declareStyleProperty(BackgroundColor, Default, "none", $themeable = %true())
$declareStyleProperty(BorderStyle, Default, "none", $themeable = %true())
$declareStyleProperty(BorderColor, Default, "none", $themeable = %true())
$declareStyleProperty(BorderThickness, Default, 1, $themeable = %true())
$declareStyleProperty(RoundCorner, Default, 0, $themeable = %true())
$declareStyleProperty(Shadowing, Default, false, $themeable = %true(), $skinParam = %false())

hide stereotypes
!ifndef $THEME
    skinparam Shadowing $DefaultShadowing
!endif

' Actor Styles
' ==================================

$declareStyleProperty(Shape, Actor, Agent, $themeable = %false(), $skinParam = %false())

$declareStyleProperty(IconStyle, Actor, "outline", $themeable = %false(), $skinParam = %false())
$declareStyleProperty(IconScale, Actor, 1, $themeable = %false(), $skinParam = %false())
$declareStyleProperty(IconColor, Actor, modeAdjustedColor("#1f2833"), $themeable = %true(), $skinParam = %false())

$declareStyleProperty(FontColor, Actor, $DefaultFontColor, $themeable = %true())
$declareStyleProperty(FontName, Actor, $DefaultFontName, $themeable = %true())
$declareStyleProperty(FontSize, Actor, $DefaultFontSize, $themeable = %true())
$declareStyleProperty(FontStyle, Actor, $DefaultFontStyle, $themeable = %true())
$declareStyleProperty(TextAlignment, Actor, $DefaultTextAlignment, $themeable = %true())

$declareStyleProperty(BackgroundColor, Actor, $DefaultBackgroundColor, $themeable = %true())
$declareStyleProperty(BorderStyle, Actor, $DefaultBorderStyle, $themeable = %true())
$declareStyleProperty(BorderColor, Actor, $DefaultBorderColor, $themeable = %true())
$declareStyleProperty(BorderThickness, Actor, $DefaultBorderThickness, $themeable = %true())
$declareStyleProperty(RoundCorner, Actor, $DefaultRoundCorner, $themeable = %true())
$declareStyleProperty(Shadowing, Actor, $DefaultShadowing, $themeable = %true())

' Work Object Styles
' ==================================

$declareStyleProperty(Shape, Object, Card, $themeable = %false(), $skinParam = %false())

$declareStyleProperty(IconStyle, Object, "outline", $themeable = %false(), $skinParam = %false())
$declareStyleProperty(IconScale, Object, 0.8, $themeable = %false(), $skinParam = %false())
$declareStyleProperty(IconColor, Object, modeAdjustedColor("#1f2833"), $themeable = %true(), $skinParam = %false())

$declareStyleProperty(FontColor, Object, $DefaultFontColor, $themeable = %true())
$declareStyleProperty(FontName, Object, $DefaultFontName, $themeable = %true())
$declareStyleProperty(FontSize, Object, $DefaultFontSize, $themeable = %true())
$declareStyleProperty(FontStyle, Object, $DefaultFontStyle, $themeable = %true())
$declareStyleProperty(TextAlignment, Object, $DefaultTextAlignment, $themeable = %true())

$declareStyleProperty(BackgroundColor, Object, $DefaultBackgroundColor, $themeable = %true())
$declareStyleProperty(BorderStyle, Object, $DefaultBorderStyle, $themeable = %true())
$declareStyleProperty(BorderColor, Object, $DefaultBorderColor, $themeable = %true())
$declareStyleProperty(BorderThickness, Object, $DefaultBorderThickness, $themeable = %true())
$declareStyleProperty(RoundCorner, Object, $DefaultRoundCorner, $themeable = %true())
$declareStyleProperty(Shadowing, Object, $DefaultShadowing, $themeable = %true())

' Boundary Styles
' ==================================

$declareStyleProperty(Shape, Boundary, Rectangle, $themeable = %false(), $skinParam = %false())

$declareStyleProperty(FontColor, Boundary, $DefaultFontColor, $themeable = %true())
$declareStyleProperty(FontName, Boundary, $DefaultFontName, $themeable = %true())
$declareStyleProperty(FontSize, Boundary, $DefaultFontSize, $themeable = %true())
$declareStyleProperty(FontStyle, Boundary, $DefaultFontStyle, $themeable = %true())
$declareStyleProperty(TextAlignment, Boundary, $DefaultTextAlignment, $themeable = %true())

$declareStyleProperty(BackgroundColor, Boundary, $DefaultBackgroundColor, $themeable = %true())
$declareStyleProperty(BorderStyle, Boundary, "dashed", $themeable = %true())
$declareStyleProperty(BorderColor, Boundary, modeAdjustedColor("#1f2833"), $themeable = %true())
$declareStyleProperty(BorderThickness, Boundary, 2, $themeable = %true())
$declareStyleProperty(RoundCorner, Boundary, 15, $themeable = %true())
$declareStyleProperty(Shadowing, Boundary, $DefaultShadowing, $themeable = %true())

' Note Styles
' ==================================

$declareStyleProperty(FontColor, Note, $DefaultFontColor, $themeable = %true())
$declareStyleProperty(FontName, Note, $DefaultFontName, $themeable = %true())
$declareStyleProperty(FontSize, Note, $DefaultFontSize, $themeable = %true())
$declareStyleProperty(FontStyle, Note, $DefaultFontStyle, $themeable = %true())
$declareStyleProperty(TextAlignment, Note, left, $themeable = %true())

$declareStyleProperty(BackgroundColor, Note, modeAdjustedColor("#c5c6c7"), $themeable = %true())
$declareStyleProperty(BorderStyle, Note, $DefaultBorderStyle, $themeable = %true())
$declareStyleProperty(BorderColor, Note, modeAdjustedColor("#1f2833"), $themeable = %true())
$declareStyleProperty(BorderThickness, Note, $DefaultBorderThickness, $themeable = %true())
$declareStyleProperty(RoundCorner, Note, $DefaultRoundCorner, $themeable = %true())
$declareStyleProperty(Shadowing, Note, $DefaultShadowing, $themeable = %true())

' Activity Styles
' ==================================

$declareStyleProperty(Shape, Activity, Arrow, $themeable = %false(), $skinParam = %false())

$declareStyleProperty(FontColor, Activity, $DefaultFontColor, $themeable = %true())
$declareStyleProperty(FontName, Activity, $DefaultFontName, $themeable = %true())
$declareStyleProperty(FontSize, Activity, $DefaultFontSize, $themeable = %true())
$declareStyleProperty(FontStyle, Activity, $DefaultFontStyle, $themeable = %true())
$declareStyleProperty(MessageAlignment, Activity, left, $themeable = %true())

$declareStyleProperty(Color, Activity, modeAdjustedColor("#c5c6c7", "#c5c6c7"), $themeable = %true())

' Step Label Styles
' ----------------------------------

$declareStyleProperty(FontColor, Step, $DefaultFontColor, $themeable = %true(), $skinParam = %false())
$declareStyleProperty(FontSize, Step, 16, $themeable = %true(), $skinParam = %false())

$declareStyleProperty(BackgroundColor, Step, modeAdjustedColor("#66fcf1"), $themeable = %true(), $skinParam = %false())

' Mutable state
' ##################################

!global $stepCounter = 0
!global $workObjectCounter = 0

' Customize Style Declarations
' ##################################

!procedure customizeStyleProperty($value, $property, $context,  $kind = "", $tag = "", $skinParam = %true())
    !if $kind
        !$propertyValue = $setStyleProperty($property, $kind, $value, $tag, %false(), %true())
    !else
        !$propertyValue = $setStyleProperty($property, $context, $value, $tag, %false(), %true())
    !endif
    !if $skinParam
        $activateStyleProperty($property, $context, $propertyValue, $kind, $tag)
    !endif
!endprocedure

' Actors
' ##################################

!unquoted procedure Actor($kind, $iconName, $name, $label = "", $tag = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    $debug($kind + " : " + $iconName + " : " + $name + " : " + $label + " : " + $tag + " : " + $note + " : " + $shape + " : " + $scale + " : " + $color + " : " + $background)

    !$shape = $withFallback($shape, Actor, $kind, $tag, Shape)
    !$scale = $withFallback($scale, Actor, $kind, $tag, IconScale)
    !$color = $withFallback($color, Actor, $kind, $tag, IconColor)

    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color
        $shape "<$iconName{scale=$scale,color=$color}>\r##$label" as $name $computeStereotype($kind, $tag) $computeColorName($background)
    !else
        $shape "<$iconName{scale=$scale}>\r##$label" as $name $computeStereotype($kind, $tag) $computeColorName($background)
    !endif

    $createElementNote($name, $note)
!endprocedure

' Person Actor
' ==================================

!global $PersonIconStyle ?= $ActorIconStyle

!if $PersonIconStyle == "outline"
    $extendStyleDeclarations("Actor", "Person", "account_outline")
!else
    $extendStyleDeclarations("Actor", "Person", "account")
!endif

!unquoted procedure Person($name, $label = "", $tag = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Actor("Person", $PersonIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Group Actor
' ==================================

!global $GroupIconStyle ?= $ActorIconStyle

!if $GroupIconStyle == "outline"
    $extendStyleDeclarations("Actor", "Group", "account_multiple_outline")
!else
    $extendStyleDeclarations("Actor", "Group", "account_multiple")
!endif

!unquoted procedure Group($name, $label = "", $tag = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Actor("Group", $GroupIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' System Actor
' ==================================

$extendStyleDeclarations("Actor", "System", "laptop")

!unquoted procedure System($name, $label = "", $tag = "", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Actor("System", $SystemIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Work Objects
' ##################################

!unquoted procedure Object($kind, $iconName, $name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    $debug($kind + " : " + $iconName + " : " + $name + " : " + $label + " : " + $tag + " : " + $note + " : " + $shape + " : " + $scale + " : " + $color + " : " + $background)

    !$shape = $withFallback($shape, Object, $kind, $tag, Shape)
    !$scale = $withFallback($scale, Object, $kind, $tag, IconScale)
    !$color = $withFallback($color, Object, $kind, $tag, IconColor)

    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color
        $shape "<$iconName{scale=$scale,color=$color}>\r##$label" as $name $computeStereotype($kind, $tag) $computeColorName($background)
    !else
        $shape "<$iconName{scale=$scale}>\r##$label" as $name $computeStereotype($kind, $tag) $computeColorName($background)
    !endif

    $createElementNote($name, $note)
!endprocedure

' Document Work Object
' ==================================

!global $DocumentIconStyle ?= $ObjectIconStyle

!if $DocumentIconStyle == "outline"
    $extendStyleDeclarations("Object", "Document", "file_document")
!else
    $extendStyleDeclarations("Object", "Document", "document")
!endif

!unquoted procedure Document($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Document", $DocumentIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Folder Work Object
' ==================================

!global $FolderIconStyle ?= $ObjectIconStyle

!if $FolderIconStyle == "outline"
    $extendStyleDeclarations("Object", "Folder", "folder_outline")
!else
    $extendStyleDeclarations("Object", "Folder", "folder")
!endif

!unquoted procedure Folder($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Folder", $FolderIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Call Work Object
' ==================================

$extendStyleDeclarations("Object", "Call", "phone")

!unquoted procedure Call($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Call", $CallIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Email Work Object
' ==================================

!global $EmailIconStyle ?= $ObjectIconStyle

!if $EmailIconStyle == "outline"
    $extendStyleDeclarations("Object", "Email", "at")
!else
    $extendStyleDeclarations("Object", "Email", "email")
!endif

!unquoted procedure Email($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Email", $EmailIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Conversation Work Object
' ==================================

!global $ConversationIconStyle ?= $ObjectIconStyle

!if $ConversationIconStyle == "outline"
    $extendStyleDeclarations("Object", "Conversation", "message_outline")
!else
    $extendStyleDeclarations("Object", "Conversation", "message")
!endif

!unquoted procedure Conversation($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Conversation", $ConversationIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Info Work Object
' ==================================

!global $InfoIconStyle ?= $ObjectIconStyle

!if $InfoIconStyle == "outline"
    $extendStyleDeclarations("Object", "Info", "information_outline")
!else
    $extendStyleDeclarations("Object", "Info", "information")
!endif

!unquoted procedure Info($name, $label = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "")
    Object("Info", $InfoIconName, $name, $label, $tag, $note, $shape, $scale, $color, $background)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Boundary($name, $label = "", $tag = "", $note = "", $shape = "", $background = "")
    !$shape = $withFallback($shape, Boundary, "", $tag, Shape)

    !if $label == ""
        !$label = $name
    !endif

    !if $note
        $shape $name
        $createBoundaryNote($name, $note)
    !endif

    ' output below
    $shape "==$label" as $name $computeStereotype("", $tag) $computeColorName($background)
!endprocedure

' Activities
' ##################################

!unquoted procedure activity($step, $subject, $predicate, $object, $post = "", $target = "", $objectArr = "", $targetArr = "", $tag="", $note = "", $shape = "", $scale = "", $color = "", $background = "", $targetTag="", $targetNote = "", $targetShape = "", $targetScale = "", $targetColor = "", $targetBackground = "")
    ' Decide on the activity direction
    !if $objectArr == ""
        !$objectArr = $computeArrowDirection($step)

        !if $objectArr
            ' Delete position indicator from $step
            !$step = %substr($step, 1)
        !else
            ' No position indicator was found => follow Default story flow
            !$objectArr = "-->"
        !endif
    !endif

    !if $targetArr == ""
        !$targetArr = $objectArr
    !endif

    ' Handle first connection between subject and object
    !$object = $ensureElementExists($object, $tag, $note, $shape, $scale, $color, $background)

    $createConnection($subject, $object, $objectArr, $predicate, $computeStepLabel($step))

    ' Handle possible second connection between object and target
    !$target = $ensureElementExists($target, $targetTag, $targetNote, $targetShape, $targetScale, $targetColor, $targetBackground)

    !if $post && $post != "_"
        !if $target && $target != "_"
            $createConnection($object, $target, $targetArr, $post)
        !else
            $createConnection($object, $post, $targetArr)
        !endif
    !endif
!endprocedure

' Notes
' ##################################

!procedure $createElementNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            note top of $reference : $noteText
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            note bottom of $reference : $noteText
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "~"
            !if $StoryLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $StoryLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

!procedure $createBoundaryNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            !if $StoryLayout == "left-to-right"
                note bottom of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            !if $StoryLayout == "left-to-right"
                note top of $reference : $noteText
            !else
                note bottom of $reference : $noteText
            !endif
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "~"
            !if $StoryLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $StoryLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

' Helper procedures
' ##################################

' Be aware this function might produce side effects
!function $ensureElementExists($element, $tag, $note, $shape, $scale, $color, $background)
    !$separatorPosition = %strpos($element, ":")

    !if $separatorPosition > -1
        !$workObjectCounter = $workObjectCounter + 1

        !$elementKind = %substr($element, 0, $separatorPosition)
        !$elementLabel = %substr($element, $separatorPosition + 1)
        !$elementName = $elementKind + $workObjectCounter

        'Element($kind, $name, $label, $tag, $note, $shape, $scale, $color, $background)
        %invoke_procedure($elementKind, $elementName, $elementLabel, $tag, $note, $shape, $scale, $color, $background)

        !return $elementName
    !else
        $createElementNote($element, $note)

        !return $element
    !endif
!endfunction

!procedure $createConnection($from, $to, $arrow = "-->", $label = "", $stepCounter = "")
    !if %substr($arrow, 0, 1) == "<"
        !if $label
            $to $arrow $from : $stepCounter $label
        !else
            $to $arrow $from
        !endif
    !else
        !if $label
            $from $arrow $to : $stepCounter $label
        !else
            $from $arrow $to
        !endif
    !endif
!endprocedure

' Helper functions
' ##################################

!function $computeColorName($colorSpec)
    !if $colorSpec
        !$hexColor = %substr($colorSpec, 0, 1)
        !if $hexColor == "#"
            !return $colorSpec
        !else
            !return "#" + $colorSpec
        !endif
    !else
        !return ""
    !endif
!endfunction

!function $computeArrowDirection($step)
    !$activityDirection = %substr($step, 0, 1)
    !if $activityDirection == "^"
        !if $StoryLayout == "left-to-right"
            !return "<-"
        !else
            !return "<--"
        !endif
    !elseif $activityDirection == ">"
        !if $StoryLayout == "left-to-right"
            !return "-->"
        !else
            !return "->"
        !endif
    !elseif $activityDirection == "<"
        !if $StoryLayout == "left-to-right"
            !return "<--"
        !else
            !return "<-"
        !endif
    !elseif  $activityDirection == "v"
        !if $StoryLayout == "left-to-right"
            !return "->"
        !else
            !return "-->"
        !endif
    !elseif  $activityDirection == "~"
        !return "<--"
    !else
        ' Signal no direction found
        !return %false()
    !endif
!endfunction

!function $computeStepLabel($step)
    !$stepNumber = $computeStepNumber($step)

    !if $stepNumber
        !$result = "(" + $stepNumber + ")"
        !if $StepFontColor
            !$result = "<color:" + $StepFontColor + ">" + $result + "</color>"
        !endif
        !if $StepFontSize
            !$result = "<size:" + $StepFontSize + ">" + $result + "</size>"
        !endif
        !if $StepBackgroundColor
            !$result = "<back:" + $StepBackgroundColor + ">" + $result + "</back>"
        !endif
        !return $result
    !else
        !return ""
    !endif
!endfunction

!function $computeStepNumber($step)
    !if $step == "_" || $step == "+"
        !$stepCounter = $stepCounter + 1
        !return $stepCounter
    !elseif $step == "|"
        !return $stepCounter
    !elseif %substr($step, 0, 1) == "="
        !$stepCounter = %intval(%substr($step, 1))
        !return $stepCounter
    !elseif $step == "."
        ' Signal unnumbered step
        !return %false()
    !else
        !return $step
    !endif
!endfunction
