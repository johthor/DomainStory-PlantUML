' Story Layout
' ##################################

' in journeys with multiple stories the default top-to-bottom direction
' usually gives better results

!global $storyLayout ?= "left-to-right"

!if $storyLayout == "left-to-right" || $storyLayout == "landscape"
    !global $storyLayout = "left-to-right"
    left to right direction
!else
    top to bottom direction
!endif

' Global Style declarations
' ##################################

hide stereotypes
skinparam DefaultTextAlignment center

!ifdef $THEME
    !global $textColor ?= ""
!else
    !global $textColor ?= "#0b0c10"

    skinparam Shadowing false
    skinparam Padding 5
!endif

' Style helper
!procedure $setProperty($property, $value)
    !if $value
        $property $value
    !endif
!endprocedure

' Actor Styles
' ==================================

!global $actorShape ?= "agent"
!global $actorStyle ?= "default"
!global $actorScale ?= 1

!ifdef $THEME
    !global $actorColor ?= ""
!else
    !global $actorColor ?= "#1f2833"
!endif

skinparam $actorShape {
    $setProperty(FontColor, $textColor)

    ' define default style for actor elements
    !ifndef $THEME
        BackgroundColor none
        BorderColor none
    !endif
}

' Work Object Styles
' ==================================

!global $objectShape ?= "card"
!global $objectStyle ?= "default"
!global $objectScale ?= 0.8

!ifdef $THEME
    !global $objectColor ?= ""
!else
    !global $objectColor ?= "#1f2833"
!endif

skinparam $objectShape {
    $setProperty(FontColor, $textColor)

    ' define default style for work object elements
    !ifndef $THEME
        BackgroundColor none
        BorderColor none
    !endif
}

' Boundary Styles
' ==================================

!global $boundaryShape ?= "rectangle"

!ifdef $THEME
    !global $boundaryColor ?= ""
!else
    !global $boundaryColor ?= "#1f2833"
!endif

skinparam $boundaryShape {
    $setProperty(FontColor, $textColor)
    $setProperty(BorderColor, $boundaryColor)

    ' define default style for boundary containers
    !ifndef $THEME
        BackgroundColor none
        BorderStyle dashed
        RoundCorner 15
    !endif
}

' Activity Styles
' ==================================

!ifdef $THEME
    !global $activityColor ?= ""
    !global $stepColor ?= ""
    !global $stepFontColor ?= $textColor
    !global $stepFontSize ?= ""
!else
    !global $activityColor ?= "#c5c6c7"
    !global $stepColor ?= "#66fcf1"
    !global $stepFontColor ?= $textColor
    !global $stepFontSize ?= 16
!endif

skinparam arrow {
    $setProperty(Color, $activityColor)
    $setProperty(FontColor, $textColor)
}

' Note Styles
' ==================================

!ifdef $THEME
    !global $noteColor ?= ""
    !global $noteBorder ?= ""
!else
    !global $noteColor ?= "#c5c6c7"
    !global $noteBorder ?= "#1f2833"
!endif

skinparam note {
    $setProperty(FontColor, $textColor)
    $setProperty(BackgroundColor, $noteColor)
    $setProperty(BorderColor, $noteBorder)
}

' Mutable state
' ##################################

!global $stepCounter = 0
!global $workObjectCounter = 0

' Actors
' ##################################

!unquoted procedure Actor($kind, $icon, $name, $label = $name, $note = "", $color = $actorColor, $scale = $actorScale, $shape = $actorShape)
    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color == ""
        $shape "<$icon{scale=$scale}>\r $label" as $name <<$kind>>
    !else
        $shape "<color:$color><$icon{scale=$scale}></color>\r $label" as $name <<$kind>>
    !endif

    $createElementNote($name, $note)
!endprocedure

' Person Actor
' ==================================

!global $personShape ?= $actorShape

!if %not(%variable_exists("$personIcon"))
    !if $actorStyle == "default"
        !include <material/account_outline>
        !global $personIcon = "$ma_account_outline"
    !else
        !include <material/account>
        !global $personIcon = "$ma_account"
    !endif
!endif

!unquoted procedure Person($name, $label = "", $note = "", $color = $actorColor, $scale = $actorScale, $shape = $personShape)
    Actor("Person", "$personIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Group Actor
' ==================================

!global $groupShape ?= $actorShape

!if %not(%variable_exists("$groupIcon"))
    !if $actorStyle == "default"
        !include <material/account_multiple_outline>
        !global $groupIcon = "$ma_account_multiple_outline"
    !else
        !include <material/account_multiple>
        !global $groupIcon = "$ma_account_multiple"
    !endif
!endif

!unquoted procedure Group($name, $label = "", $note = "", $color = $actorColor, $scale = $actorScale, $shape = $groupShape)
    Actor("Group", "$groupIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' System Actor
' ==================================

!global $systemShape ?= $actorShape

!if %not(%variable_exists("$systemIcon"))
    !include <material/laptop>
    !global $systemIcon = "$ma_laptop"
!endif

!unquoted procedure System($name, $label = "", $note = "", $color = $actorColor, $scale = $actorScale, $shape = $systemShape)
    Actor("System", "$systemIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Work objects
' ##################################

!unquoted procedure Object($kind, $icon, $name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape)
    !if $label == ""
        !$label = $name
    !endif

    ' output below
    !if $color == ""
        $shape "<$icon{scale=$scale}>\r $label" as $name <<$kind>>
    !else
        $shape "<color:$color><$icon{scale=$scale}></color>\r $label" as $name <<$kind>>
    !endif

    $createElementNote($name, $note)
!endprocedure

' Document Work Object
' ==================================

!global $documentShape ?= $objectShape

!if %not(%variable_exists("$documentIcon"))
    !if $objectStyle == "default"
        !include <material/file_document>
        !global $documentIcon = "$ma_file_document"
    !else
        !include <material/document>
        !global $documentIcon = "$ma_document"
    !endif
!endif

!unquoted procedure Document($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $documentShape)
    Object("Document", "$documentIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Folder Work Object
' ==================================

!global $folderShape ?= $objectShape

!if %not(%variable_exists("$folderIcon"))
    !if $objectStyle == "default"
        !include <material/folder_outline>
        !global $folderIcon = "$ma_folder_outline"
    !else
        !include <material/folder>
        !global $folderIcon = "$ma_folder"
    !endif
!endif

!unquoted procedure Folder($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $folderShape)
    Object("Folder", "$folderIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Call Work Object
' ==================================

!global $callShape ?= $objectShape

!if %not(%variable_exists("$callIcon"))
    !include <material/phone>
    !global $callIcon = "$ma_phone"
!endif

!unquoted procedure Call($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $callShape)
    Object("Call", "$callIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Email Work Object
' ==================================

!global $emailShape ?= $objectShape

!if %not(%variable_exists("$emailIcon"))
    !if $objectStyle == "default"
        !include <material/at>
        !global $emailIcon = "$ma_at"
    !else
        !include <material/email>
        !global $emailIcon = "$ma_email"
    !endif
!endif

!unquoted procedure Email($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $emailShape)
    Object("Email", "$emailIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Conversation Work Object
' ==================================

!global $conversationShape ?= $objectShape

!if %not(%variable_exists("$conversationIcon"))
    !if $objectStyle == "default"
        !include <material/message_outline>
        !global $conversationIcon = "$ma_message_outline"
    !else
        !include <material/message>
        !global $conversationIcon = "$ma_message"
    !endif
!endif

!unquoted procedure Conversation($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $conversationShape)
    Object("Conversation", "$conversationIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Info Work Object
' ==================================

!global $infoShape ?= $objectShape

!if %not(%variable_exists("$infoIcon"))
    !if $objectStyle == "default"
        !include <material/information_outline>
        !global $infoIcon = "$ma_information_outline"
    !else
        !include <material/information>
        !global $infoIcon = "$ma_information"
    !endif
!endif

!unquoted procedure Info($name, $label = "", $note = "", $color = $objectColor, $scale = $objectScale, $shape = $infoShape)
    Object("Info", "$infoIcon", $name, $label, $note, $color, $scale, $shape)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Boundary($name, $label = "", $backgroundColor = "", $shape = $boundaryShape, $note = "")
    !if $label == ""
        !$label = $name
    !endif

    !if $note
        $shape $name
        $createBoundaryNote($name, $note)
    !endif

    ' output below
    !if $backgroundColor
        !$hexColor = %substr($backgroundColor, 0, 1)
        !if $hexColor == "#"
            $shape "==$label" as $name $backgroundColor
        !else
            $shape "==$label" as $name #$backgroundColor
        !endif
    !else
        $shape "==$label" as $name
    !endif
!endprocedure

' Activities
' ##################################

!unquoted procedure activity($step, $subject, $predicate, $object, $post = "", $target = "", $objectArr = "", $targetArr = "", $note = "", $targetNote = "", $color = $objectColor, $scale = $objectScale, $shape = $objectShape, $targetColor = $objectColor, $targetScale = $objectScale, $targetShape = $objectShape)
    ' Decide on the activity direction
    !if $objectArr == ""
        !$objectArr = $computeArrowDirection($step)

        !if $objectArr
            ' Delete position indicator from $step
            !$step = %substr($step, 1)
        !else
            ' No position indicator was found => follow default story flow
            !$objectArr = "-->"
        !endif
    !endif

    !if $targetArr == ""
        !$targetArr = $objectArr
    !endif

    ' Handle first connection between subject and object
    !$object = $ensureElementExists($object, $note, $color, $scale, $shape)

    $createConnection($subject, $object, $objectArr, $predicate, $computeStepLabel($step))

    ' Handle possible second connection between object and target
    !$target = $ensureElementExists($target, $targetNote, $targetColor, $targetScale, $targetShape)

    !if $post && $post != "_"
        !if $target && $target != "_"
            $createConnection($object, $target, $targetArr, $post)
        !else
            $createConnection($object, $post, $targetArr)
        !endif
    !endif
!endprocedure

' Notes
' ##################################

!procedure $createElementNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            note top of $reference : $noteText
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            note bottom of $reference : $noteText
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "!"
            !if $storyLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $storyLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

!procedure $createBoundaryNote($reference, $note)
    !if $note
        !$notePosition = %substr($note, 0, 1)
        !$noteText = %substr($note, 1)

        !if $notePosition == "^"
            !if $storyLayout == "left-to-right"
                note bottom of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !elseif $notePosition == ">"
            note right of $reference : $noteText
        !elseif $notePosition == "v"
            !if $storyLayout == "left-to-right"
                note top of $reference : $noteText
            !else
                note bottom of $reference : $noteText
            !endif
        !elseif $notePosition == "<"
            note left of $reference : $noteText
        !elseif $notePosition == "!"
            !if $storyLayout == "left-to-right"
                note left of $reference : $noteText
            !else
                note top of $reference : $noteText
            !endif
        !else
            !if $storyLayout == "left-to-right"
                note right of $reference : $note
            !else
                note bottom of $reference : $note
            !endif
        !endif
    !endif
!endprocedure

' Helper procedures
' ##################################

' Be aware this function might produce side effects
!function $ensureElementExists($element, $note, $color, $scale, $shape)
    !$separatorPosition = %strpos($element, ":")

    !if $separatorPosition > -1
        !$workObjectCounter = $workObjectCounter + 1

        !$elementKind = %substr($element, 0, $separatorPosition)
        !$elementLabel = %substr($element, $separatorPosition + 1)
        !$elementName = $elementKind + $workObjectCounter

        '! Actor($kind, $icon, $name, $label, $note, $color, $scale, $shape)
        %invoke_procedure($elementKind, $elementName, $elementLabel, $note, $color, $scale, $shape)

        !return $elementName
    !else
        $createElementNote($element, $note)

        !return $element
    !endif
!endfunction

!procedure $createConnection($from, $to, $spec = "-->", $label = "", $stepCounter = "")
    !if %substr($spec, 0, 1) == "<"
        !if $label
            $to $spec $from : $stepCounter $label
        !else
            $to $spec $from
        !endif
    !else
        !if $label
            $from $spec $to : $stepCounter $label
        !else
            $from $spec $to
        !endif
    !endif
!endprocedure

' Helper functions
' ##################################

!function $computeArrowDirection($step)
    !$activityDirection = %substr($step, 0, 1)
    !if $activityDirection == "^"
        !if $storyLayout == "left-to-right"
            !return "<-"
        !else
            !return "<--"
        !endif
    !elseif $activityDirection == ">"
        !if $storyLayout == "left-to-right"
            !return "-->"
        !else
            !return "->"
        !endif
    !elseif $activityDirection == "<"
        !if $storyLayout == "left-to-right"
            !return "<--"
        !else
            !return "<-"
        !endif
    !elseif  $activityDirection == "v"
        !if $storyLayout == "left-to-right"
            !return "->"
        !else
            !return "-->"
        !endif
    !elseif  $activityDirection == "!"
        !return "<--"
    !else
        ' Signal no direction found
        !return %false()
    !endif
!endfunction

!function $computeStepLabel($step)
    !$stepNumber = $computeStepNumber($step)

    !if $stepNumber
        !$result = "(" + $stepNumber + ")"
        !if $stepColor
            !$result = "<back:" + $stepColor + ">" + $result + "</back>"
        !endif
        !if $stepFontColor
            !$result = "<color:" + $stepFontColor + ">" + $result + "</color>"
        !endif
        !if $stepFontSize
            !$result = "<size:" + $stepFontSize + ">" + $result + "</size>"
        !endif
        !return $result
    !else
        !return ""
    !endif
!endfunction

!function $computeStepNumber($step)
    !if $step == "_"
        !$stepCounter = $stepCounter + 1
        !return $stepCounter
    !elseif $step == "|"
        !return $stepCounter
    !elseif %substr($step, 0, 1) == "="
        !$stepCounter = %intval(%substr($step, 1))
        !return $stepCounter
    !elseif $step == "."
        ' Signal unnumbered step
        !return %false()
    !else
        !return $step
    !endif
!endfunction
